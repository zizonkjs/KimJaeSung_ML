# 1. 데이터 탐색적 분석
# - 전처리 : 모든 것을 수치화 -> 범주형(Encoding) [소분류 >> 대분류]



# 2. 지도/비지도/강화

# 3. 학습알고리즘 선택
# - 선형모델의 기본적인 특징
# - 피쳐와 타겟이 선형관계를 이룰 때
# - 정규분포 기반
# - 선형식 : y=ax+b => wx+b => w0+w1x
#           y = w0+w1x + w2x + ... + wnx
# - Coefficent 또는 Weight : 학습을 통해서 다양한 피처들의 영향 정도를 정확하게 반영하기 위해서 사용됨. ** 우리의 목표 : 일반화된 모델 (피쳐는 간소화 할 수록 좋고, 간소화시키면서 일반화된 모델을 찾아야함)
#                            과대적합을 없애기 위해 규제를 가함. -> 릿지, 라쏘, 엘라머시기
#                            - 릿지 : 모든 가중치를 제곱, 절대값 합을 구함. 가중치들이 특정값이상 커지지 않게 방지. (알파값을 통해 규제를 조정) 규제를 하되 특정피처를 0에 가깝게 만듬.
#                            - 라쏘 : 벡터의 크기 (Nom) L2, L1(절대값) 라쏘는 L1 방식 -> 영향력이 작은 피쳐는 그냥 0으로 만들어버림
#                            - 릿지 라쏘는 같이 사용함.

# 파라미터
# - 모델 파라미터 : fit()학습 진행 후 설정되는 파라미터
# - 모델.파라미터명_

# 하이퍼 파라미터 : 모델 인스턴스 생성시 매개변수
#                  모델 인스턴스 생성할 때 개발자가 값을 설정해줌.
#                  모델 성능에 영향을 미침.
#                  예 ) 규제 강도, alpha, KNN의 K개수, 학습 횟수 max_iter
#                  규제강도 C (alpha 역수)

# 튜닝 : 모델 성능을 높이는 작업, 모델의 하이퍼파라미터의 값을 조절해서 성능 올리기

# 좋은 모델
# - 일반화가 잘된 모델 (test가 잘되어야 하는 모델)
# - 모델 복잡도는 간소할 수록 좋다. (피쳐 수가 간소한 것)

